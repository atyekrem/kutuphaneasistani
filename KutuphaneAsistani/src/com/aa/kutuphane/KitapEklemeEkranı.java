
package com.aa.kutuphane;

import java.awt.Desktop;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;


public final class KitapEklemeEkranı extends javax.swing.JFrame {

    DefaultTableModel model;
   
    public KitapEklemeEkranı() {
        initComponents();
        model = (DefaultTableModel) kitap_tablosu.getModel();
        kitapGoruntule();
       
    }
   /**
    * Kitapları goruntulemek için yazılan bir metod
    
    */
    public void kitapGoruntule(){
         Kutuphaneİslemleri kutuphaneİslemleri = new Kutuphaneİslemleri();
        model.setRowCount(0);
        
        ArrayList<Kitap> kitaplar = new ArrayList<Kitap>();
        
        kitaplar = kutuphaneİslemleri.kitaplariGoster();
        
        if (kitaplar!=null) {
            
            for(Kitap kitap: kitaplar){
                
                Object[] eklenecek = {kitap.getId(),kitap.getAdı(),kitap.getYazar(),kitap.getTür(),kitap.getCevirmen()};
                model.addRow(eklenecek);
            }
            
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelClose = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabelMin = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        yazar_ismi_text = new javax.swing.JTextField();
        kitap_ekle_button = new javax.swing.JButton();
        kitap_sil_button = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        kitap_ismi_text = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cevirmen_ismi_text = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        kitap_tablosu = new javax.swing.JTable();
        kitap_guncelle_button = new javax.swing.JButton();
        arama_cubugu = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        konu_ismi_text = new javax.swing.JTextField();

        setBounds(new java.awt.Rectangle(200, 50, 0, 0));
        setUndecorated(true);
        setType(java.awt.Window.Type.UTILITY);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(248, 148, 6));

        jLabelClose.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelClose.setForeground(new java.awt.Color(255, 255, 255));
        jLabelClose.setText("X");
        jLabelClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCloseMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Kitap İşlemleri");

        jLabelMin.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelMin.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMin.setText("-");
        jLabelMin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelMinMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelMin)
                .addGap(18, 18, 18)
                .addComponent(jLabelClose)
                .addGap(21, 21, 21))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(29, 29, 29)
                    .addComponent(jLabel2)
                    .addContainerGap(616, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMin, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(jLabelClose))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel2.setBackground(new java.awt.Color(44, 62, 80));
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(236, 240, 241));
        jLabel5.setText("Yazar:");

        yazar_ismi_text.setBackground(new java.awt.Color(108, 122, 137));
        yazar_ismi_text.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        yazar_ismi_text.setForeground(new java.awt.Color(228, 241, 254));

        kitap_ekle_button.setBackground(new java.awt.Color(34, 167, 240));
        kitap_ekle_button.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        kitap_ekle_button.setForeground(new java.awt.Color(255, 255, 255));
        kitap_ekle_button.setText("Kitap Ekle");
        kitap_ekle_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kitap_ekle_buttonActionPerformed(evt);
            }
        });

        kitap_sil_button.setBackground(new java.awt.Color(242, 38, 19));
        kitap_sil_button.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        kitap_sil_button.setForeground(new java.awt.Color(255, 255, 255));
        kitap_sil_button.setText("Kitap Sil");
        kitap_sil_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kitap_sil_buttonActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(236, 240, 241));
        jLabel6.setText("Kitap ismi:");

        kitap_ismi_text.setBackground(new java.awt.Color(108, 122, 137));
        kitap_ismi_text.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        kitap_ismi_text.setForeground(new java.awt.Color(228, 241, 254));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(236, 240, 241));
        jLabel7.setText("Konu:");

        cevirmen_ismi_text.setBackground(new java.awt.Color(108, 122, 137));
        cevirmen_ismi_text.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cevirmen_ismi_text.setForeground(new java.awt.Color(228, 241, 254));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(236, 240, 241));
        jLabel8.setText("Çevirmen:");

        kitap_tablosu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Kitap Adı", "Yazar", "Tür", "Çevirmen"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        kitap_tablosu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kitap_tablosuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(kitap_tablosu);
        if (kitap_tablosu.getColumnModel().getColumnCount() > 0) {
            kitap_tablosu.getColumnModel().getColumn(0).setResizable(false);
            kitap_tablosu.getColumnModel().getColumn(1).setResizable(false);
            kitap_tablosu.getColumnModel().getColumn(2).setResizable(false);
            kitap_tablosu.getColumnModel().getColumn(3).setResizable(false);
            kitap_tablosu.getColumnModel().getColumn(4).setResizable(false);
        }

        kitap_guncelle_button.setBackground(new java.awt.Color(34, 167, 240));
        kitap_guncelle_button.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        kitap_guncelle_button.setForeground(new java.awt.Color(255, 255, 255));
        kitap_guncelle_button.setText("Kitap Güncelle");
        kitap_guncelle_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kitap_guncelle_buttonActionPerformed(evt);
            }
        });

        arama_cubugu.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        arama_cubugu.setText("Aramak istediğiniz metni giriniz.");
        arama_cubugu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                arama_cubuguMouseClicked(evt);
            }
        });
        arama_cubugu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                arama_cubuguKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/eminsaygi/kutuphane/logo.png"))); // NOI18N
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.setMaximumSize(new java.awt.Dimension(200, 114));
        jLabel1.setPreferredSize(new java.awt.Dimension(200, 114));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        konu_ismi_text.setBackground(new java.awt.Color(108, 122, 137));
        konu_ismi_text.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        konu_ismi_text.setForeground(new java.awt.Color(228, 241, 254));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(arama_cubugu)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(yazar_ismi_text, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                            .addComponent(kitap_ismi_text)
                            .addComponent(konu_ismi_text)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(kitap_sil_button)
                                .addGap(18, 18, 18)
                                .addComponent(kitap_guncelle_button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(kitap_ekle_button))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addComponent(cevirmen_ismi_text, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 2, Short.MAX_VALUE)))))
                .addGap(117, 117, 117)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(kitap_ismi_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(yazar_ismi_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jLabel7))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(konu_ismi_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cevirmen_ismi_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(0, 20, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kitap_sil_button, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kitap_guncelle_button, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kitap_ekle_button, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(arama_cubugu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 51, -1, 580));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Labele basınca çıkış işlemini burda yapıyoruz
    */
    private void jLabelCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCloseMouseClicked

        System.exit(0);
        
    }//GEN-LAST:event_jLabelCloseMouseClicked
    /**
     * Labele basınca sistem tepesinden küçülyme işlemini burda yapıyoruz.
    */
    private void jLabelMinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelMinMouseClicked

        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabelMinMouseClicked
     /**
     * TextBox'a girdiğimiz veriyi burda kontrol edererek,arama işlemi yapıyorız.
    */
    public  void dinamikAra(String ara){
        
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        
        kitap_tablosu.setRowSorter(tr);
        
       tr.setRowFilter(RowFilter.regexFilter(ara));
        
    }
    /**
     * Kitap Ekle butonuna basınca olabilacak eventler 
    */
    private void kitap_ekle_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kitap_ekle_buttonActionPerformed
       
        Kutuphaneİslemleri kutuphaneİslemleri = new Kutuphaneİslemleri();
        String adı = kitap_ismi_text.getText();
        String yazar = yazar_ismi_text.getText();
        String tür = konu_ismi_text.getText();
        String cevirmen = cevirmen_ismi_text.getText();
        
       
        
        if ("".equals(adı) || "".equals(yazar) || "".equals(tür)|| "".equals(cevirmen)) {
            int startNew = JOptionPane.showConfirmDialog(null,"Kitap bilgilerini hatalı giridiniz.Tekrar deneyiniz", 
			 "Bilgi", JOptionPane.CLOSED_OPTION, JOptionPane.ERROR_MESSAGE);
        }
        
        else{
            
            
        kutuphaneİslemleri.kitapEkle(adı, yazar, tür, cevirmen);
        
        int startNew = JOptionPane.showConfirmDialog(null,"Baraşıyla Kitap Eklendi.", 
			 "Bilgi", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);
        
  
        kitapGoruntule();
        
        kitap_ismi_text.setText("");
            yazar_ismi_text.setText("");
            konu_ismi_text.setText("");
            cevirmen_ismi_text.setText("");
        
        }
        
    }//GEN-LAST:event_kitap_ekle_buttonActionPerformed

    /**
     * Kitap sil buttonuna basınca olabilecek eventler 
    */
    private void kitap_sil_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kitap_sil_buttonActionPerformed
        Kutuphaneİslemleri kutuphaneİslemleri = new Kutuphaneİslemleri();
        int selectedRow = kitap_tablosu.getSelectedRow();
        
        if (selectedRow == -1) {
            
            if (model.getRowCount()==0) {
                
                
                int startNew = JOptionPane.showConfirmDialog(null,"Kitap Tablosu şuan boş.Kitap bilgisi girilince tekrar deneyiniz!", 
			 "Bilgi", JOptionPane.CLOSED_OPTION, JOptionPane.ERROR_MESSAGE);
                
            }
            else{
                
                
                int startNew = JOptionPane.showConfirmDialog(null,"Lütfen silinecek bir kitap seçiniz!", 
			 "Bilgi", JOptionPane.CLOSED_OPTION, JOptionPane.ERROR_MESSAGE);
                
            }
            
        }
        else{
            
            int id = (int) model.getValueAt(selectedRow, 0);
            
            kutuphaneİslemleri.kitapSil(id);
            
            
        int startNew = JOptionPane.showConfirmDialog(null,"Baraşıyla Kitap Silindi.", 
			 "Bilgi", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);
            
            kitapGoruntule();
            
            kitap_ismi_text.setText("");
            yazar_ismi_text.setText("");
            konu_ismi_text.setText("");
            cevirmen_ismi_text.setText("");
        }
        
    }//GEN-LAST:event_kitap_sil_buttonActionPerformed
     /**
     * Kitap guncelle buttonuna basınca olabilecek eventler
    */
    private void kitap_guncelle_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kitap_guncelle_buttonActionPerformed
         Kutuphaneİslemleri kutuphaneİslemleri = new Kutuphaneİslemleri();
        String adi= kitap_ismi_text.getText();  
        String yazar = yazar_ismi_text.getText();
        String konu = konu_ismi_text.getText();            
        String cevirmen = cevirmen_ismi_text.getText();
        
        int selectedRow = kitap_tablosu.getSelectedRow();
        if (selectedRow==-1) {
            
            if (model.getRowCount()==0) {
                
             
               int startNew = JOptionPane.showConfirmDialog(null,"Kitap Tablosu şuan boş.Kitap bilgisi girilince tekrar deneyiniz!", 
			 "Bilgi", JOptionPane.CLOSED_OPTION, JOptionPane.ERROR_MESSAGE);
               
               
                
            }
            else{
                
               
                int startNew = JOptionPane.showConfirmDialog(null,"Lütfen güncellenecek bir kitap verisi seçiniz!", 
			 "Bilgi", JOptionPane.CLOSED_OPTION, JOptionPane.ERROR_MESSAGE);
            }
            
        }
        else{
            
            if ("".equals(adi) || "".equals(yazar) || "".equals(konu)|| "".equals(cevirmen)) {
            int startNew = JOptionPane.showConfirmDialog(null,"Kitap bilgilerini hatalı giridiniz.Tekrar deneyiniz", 
			 "Bilgi", JOptionPane.CLOSED_OPTION, JOptionPane.ERROR_MESSAGE);
        }
            else{
                int id = (int) model.getValueAt(selectedRow, 0);
            
            kutuphaneİslemleri.kitapGuncelle(id, adi, yazar, konu, cevirmen);
            
            
        int startNew = JOptionPane.showConfirmDialog(null,"Baraşıyla Kitap Bilgileri Güncellendi.", 
			 "Bilgi", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);
            
            kitapGoruntule();
            
            kitap_ismi_text.setText("");
            yazar_ismi_text.setText("");
            konu_ismi_text.setText("");
            cevirmen_ismi_text.setText("");
                
            }
            
            
            
          
            
        }
        
    }//GEN-LAST:event_kitap_guncelle_buttonActionPerformed
     /**
     * Tablodan hernangi bir veriye tıklayınca,textBoxlarıma veri atma işlemini burda yapıyoruz
    */
    private void kitap_tablosuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kitap_tablosuMouseClicked
      
        int selectedRow = kitap_tablosu.getSelectedRow();
        
        kitap_ismi_text.setText(model.getValueAt(selectedRow,1).toString());
        yazar_ismi_text.setText(model.getValueAt(selectedRow,2).toString());
        konu_ismi_text.setText(model.getValueAt(selectedRow,3).toString());
        cevirmen_ismi_text.setText(model.getValueAt(selectedRow,4).toString());
        
    }//GEN-LAST:event_kitap_tablosuMouseClicked
     /**
     * Tula basıldığı sürece ara, eventini burda tanımlıyoruz.
    */
    private void arama_cubuguKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_arama_cubuguKeyReleased
       
        String ara = arama_cubugu.getText();
        
        dinamikAra(ara);
        
    }//GEN-LAST:event_arama_cubuguKeyReleased
     /**
     * Mouse ile basınca textBox içindeki veriyi silmemize yarıyor.
    */
    private void arama_cubuguMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_arama_cubuguMouseClicked
        arama_cubugu.setText("");
        
    }//GEN-LAST:event_arama_cubuguMouseClicked
     /**
     * Labele basınca,Geliştiricinin adresine gitme işlemi burda yapılıyor.  
     */
    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
     
         Desktop d = Desktop.getDesktop();
                               String internet_adresi = "https://www.eminsaygi.com";
                               try {
                                   
                                   
                                   
                                   d.browse(new URI(internet_adresi));
                               } catch (URISyntaxException | IOException ex) {
                                   Logger.getLogger(KitapEklemeEkranı.class.getName()).log(Level.SEVERE, null, ex);
                               }
        
    }//GEN-LAST:event_jLabel1MouseClicked
     /**
     * Panele tıklayınca textBox temizleme işlemi burda oluyor. 
     */
    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
       
            kitap_ismi_text.setText("");
            yazar_ismi_text.setText("");
            konu_ismi_text.setText("");
            cevirmen_ismi_text.setText("");
            arama_cubugu.setText("Aramak istediğiniz metni giriniz.");
    }//GEN-LAST:event_jPanel2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KitapEklemeEkranı.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KitapEklemeEkranı.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KitapEklemeEkranı.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KitapEklemeEkranı.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KitapEklemeEkranı().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField arama_cubugu;
    private javax.swing.JTextField cevirmen_ismi_text;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelClose;
    private javax.swing.JLabel jLabelMin;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton kitap_ekle_button;
    private javax.swing.JButton kitap_guncelle_button;
    private javax.swing.JTextField kitap_ismi_text;
    private javax.swing.JButton kitap_sil_button;
    private javax.swing.JTable kitap_tablosu;
    private javax.swing.JTextField konu_ismi_text;
    private javax.swing.JTextField yazar_ismi_text;
    // End of variables declaration//GEN-END:variables
}
